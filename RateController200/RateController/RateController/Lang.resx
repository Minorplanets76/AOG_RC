<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lgAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="lgAcresHr" xml:space="preserve">
    <value>Acres/Hr</value>
  </data>
  <data name="lgAlreadyRunning" xml:space="preserve">
    <value>Already Running</value>
  </data>
  <data name="lgBaud" xml:space="preserve">
    <value>Baud</value>
  </data>
  <data name="lgCalValues" xml:space="preserve">
    <value>Cal Values</value>
  </data>
  <data name="lgCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="lgClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="lgConnect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="lgConnected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="lgController" xml:space="preserve">
    <value>Controller</value>
  </data>
  <data name="lgCoverage" xml:space="preserve">
    <value>Coverage</value>
  </data>
  <data name="lgCurrentRate" xml:space="preserve">
    <value>Current Rate …</value>
  </data>
  <data name="lgDayNight" xml:space="preserve">
    <value>Day/Night</value>
  </data>
  <data name="lgDestinationIP" xml:space="preserve">
    <value>Destination IP</value>
  </data>
  <data name="lgDiagnostics" xml:space="preserve">
    <value>Diagnostics</value>
  </data>
  <data name="lgDisconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="lgDisconnected" xml:space="preserve">
    <value>Disconnected</value>
  </data>
  <data name="lgFastClose" xml:space="preserve">
    <value>Fast Close</value>
  </data>
  <data name="lgft" xml:space="preserve">
    <value>ft</value>
  </data>
  <data name="lgHectares/Hr" xml:space="preserve">
    <value>Hectares/Hr</value>
  </data>
  <data name="lgHour" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="lghr" xml:space="preserve">
    <value>hr</value>
  </data>
  <data name="lgInstantRate" xml:space="preserve">
    <value>Instant Rate …</value>
  </data>
  <data name="lgIPAddress" xml:space="preserve">
    <value>IP Address</value>
  </data>
  <data name="lgKPH" xml:space="preserve">
    <value>KPH</value>
  </data>
  <data name="lgLoad" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="lgLoad Defaults" xml:space="preserve">
    <value>Load Defaults</value>
  </data>
  <data name="lgLoopBackUDP" xml:space="preserve">
    <value>LoopBack UDP</value>
  </data>
  <data name="lgMain" xml:space="preserve">
    <value>Main</value>
  </data>
  <data name="lgMaxPWM" xml:space="preserve">
    <value>Max PWM</value>
  </data>
  <data name="lgMeterCalError" xml:space="preserve">
    <value>Meter Cal Error</value>
  </data>
  <data name="lgMinPWM" xml:space="preserve">
    <value>Min PWM</value>
  </data>
  <data name="lgMinute" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="lgMPH" xml:space="preserve">
    <value>MPH</value>
  </data>
  <data name="lgNetwork UDP" xml:space="preserve">
    <value>Network UDP</value>
  </data>
  <data name="lgOverallRate" xml:space="preserve">
    <value>Overall Rate …</value>
  </data>
  <data name="lgPort" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="lgPortConnected" xml:space="preserve">
    <value>Port Connected</value>
  </data>
  <data name="lgPortDisconnected" xml:space="preserve">
    <value>Port Disconnected</value>
  </data>
  <data name="lgQuantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="lgQuantityApplied" xml:space="preserve">
    <value>Quantity Applied</value>
  </data>
  <data name="lgRateCal" xml:space="preserve">
    <value>Rate Cal #</value>
  </data>
  <data name="lgRateSetError" xml:space="preserve">
    <value>Rate Set Error</value>
  </data>
  <data name="lgRealNano" xml:space="preserve">
    <value>Real Nano</value>
  </data>
  <data name="lgReceivePort" xml:space="preserve">
    <value>Receive Port</value>
  </data>
  <data name="lgRescanPorts" xml:space="preserve">
    <value>Rescan Ports</value>
  </data>
  <data name="lgResetCoverage" xml:space="preserve">
    <value>Reset Coverage</value>
  </data>
  <data name="lgResetQuantity" xml:space="preserve">
    <value>Reset Quantity</value>
  </data>
  <data name="lgResetTank" xml:space="preserve">
    <value>Reset Tank</value>
  </data>
  <data name="lgSave" xml:space="preserve">
    <value>Save  </value>
  </data>
  <data name="lgSaveAs" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="lgSectionByteHi" xml:space="preserve">
    <value>Section Byte Hi</value>
  </data>
  <data name="lgSectionByteLo" xml:space="preserve">
    <value>Section Byte Lo</value>
  </data>
  <data name="lgSendPort" xml:space="preserve">
    <value>Send Port</value>
  </data>
  <data name="lgSendTime" xml:space="preserve">
    <value>Send Time</value>
  </data>
  <data name="lgSendTimeError" xml:space="preserve">
    <value>Send Time Error</value>
  </data>
  <data name="lgSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="lgSimulateFlow" xml:space="preserve">
    <value>Simulate Flow</value>
  </data>
  <data name="lgSimulationOff" xml:space="preserve">
    <value>Simulation Off</value>
  </data>
  <data name="lgSpeed" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="lgStandard" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="lgTank Remaining" xml:space="preserve">
    <value>Tank Remaining</value>
  </data>
  <data name="lgTankRemainError" xml:space="preserve">
    <value>Tank Remaining Error</value>
  </data>
  <data name="lgTankSize" xml:space="preserve">
    <value>Tank Size</value>
  </data>
  <data name="lgTankSizeError" xml:space="preserve">
    <value>Tank Size Error</value>
  </data>
  <data name="lgTargetRate" xml:space="preserve">
    <value>Target Rate</value>
  </data>
  <data name="lgUDPLoopBackFailed" xml:space="preserve">
    <value>UDPLoopBack failed to start</value>
  </data>
  <data name="lgUDPnetworkFailed" xml:space="preserve">
    <value>UDPnetwork failed to start</value>
  </data>
  <data name="lgUDPnotice" xml:space="preserve">
    <value>AgOpenGPS UDP must be on to receive.</value>
  </data>
  <data name="lgUPMApplied" xml:space="preserve">
    <value>UPM Applied</value>
  </data>
  <data name="lgUPMTarget" xml:space="preserve">
    <value>UPM Target</value>
  </data>
  <data name="lgValveType" xml:space="preserve">
    <value>Valve Type</value>
  </data>
  <data name="lgVCNError" xml:space="preserve">
    <value>VCN Error</value>
  </data>
  <data name="lgVCNexplination" xml:space="preserve">
    <value>VCN is a 4 digit number. Backlash (1 short pulse to 9 long pulse), Speed (0 fast to 9 slow), Brake Point (0 5% to 9 90%) and Deadband (1 to 9 %).   ex: 743  no Backlash, 7 adjustment speed, 4 Brake Point at 40% error, deadband 3%.   Brake Point is the error % below which a slower adjustment speed is used.   Deadband is the error % below which no adjustment is made.  </value>
  </data>
  <data name="lgVersionDate" xml:space="preserve">
    <value>Version Date</value>
  </data>
  <data name="lgVirtualNano" xml:space="preserve">
    <value>Virtual Nano</value>
  </data>
  <data name="lgWaitTime" xml:space="preserve">
    <value>Wait Time</value>
  </data>
  <data name="lgWaitTimeError" xml:space="preserve">
    <value>Wait Time Error</value>
  </data>
  <data name="lgWorkingWidth" xml:space="preserve">
    <value>Working Width</value>
  </data>
  <data name="lgWorkingWidthFT" xml:space="preserve">
    <value>Working Width (FT)</value>
  </data>
  <data name="lgWorkingWidthM" xml:space="preserve">
    <value>Working Width (M)</value>
  </data>
  <data name="lgWorkRate" xml:space="preserve">
    <value>Work Rate</value>
  </data>
</root>